leftWheel & rightWheel.
battery & leftVoltageReg & rightVoltageReg.
leftPowerModule & rightPowerModule.
reservePowerModule.

!AbLeftWheel & !AbRightWheel.
!AbBattery & !AbLeftVoltageReg & !AbRightVoltageReg.
!AbLeftPowerModule & !AbRightPowerModule.
!AbReservePowerModule.

// VoltageRegs and Battery
battery -> (!AbBattery -> constantBattOutput).
leftVoltageReg -> (!AbLeftVoltageReg -> (constantBattOutput -> desiredLeftVoltage)).
rightVoltageReg -> (!AbRightVoltageReg -> (constantBattOutput -> desiredRightVoltage)).

// Power Modules
leftPowerModule -> (!AbLeftPowerModule -> (noRes -> desiredLeftVoltage -> eqLeftInAndOut)).
rightPowerModule -> (!AbRightPowerModule -> (noRes -> desiredRightVoltage -> eqRightInAndOut)).
reservePowerModule -> (!AbReservePowerModule -> (leftRes -> (desiredLeftVoltage -> eqResInOut))).
reservePowerModule -> (!AbReservePowerModule -> (rightRes -> (desiredRightVoltage -> eqResInOut))).

(noRes & !leftRes) | (!noRes &leftRes) | (noRes & !rightRes) | (!noRes &rightRes).

// Wheel Behaviour
rightWheel -> (!AbRightWheel -> (eqRightInAndOut -> (rightNominal & rightFaster & rightSlower))).
rightWheel -> (!AbRightWheel -> (eqResInOut -> (rightNominal & rightFaster & rightSlower))).
leftWheel -> (!AbLeftWheel -> (eqLeftInAndOut -> (leftNominal & leftFaster & leftSlower))).
leftWheel -> (!AbLeftWheel -> (eqResInOut -> (leftNominal & leftFaster & leftSlower))).

// Direction
(rightNominal & leftNominal) -> straight.
(rightFaster & leftSlower) -> left.
(rightSlower & leftFaster) -> right.